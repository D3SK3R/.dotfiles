###########################################################
#                   picom-jonaburg-git                    #
###########################################################
# jonaburg's picom must be run with --experimental-backend flag
# https://github.com/jonaburg/picom/blob/next/picom.sample.conf

#################################
#
# GLX
#
#################################
backend = "glx";

glx-no-stencil = true;

# GLX backend: Avoid rebinding pixmap on window damage.
# Probably could improve performance on rapid window content changes, but is known to break things on some drivers (LLVMpipe).
# Recommended if it works.
glx-no-rebind-pixmap = true;
#glx-copy-from-front = true;
#glx-use-copysubbuffermesa = true;

# deprecated
# GLX backend: GLX buffer swap method we assume.
# Could be undefined (0), copy (1), exchange (2), 3-6, or buffer-age (-1).
# undefined is the slowest and the safest, and the default value.
# copy is fastest, but may fail on some drivers,
# 2-6 are gradually slower but safer (6 is still faster than 0).
# Usually, double buffer means 2, triple buffer means 3.
# buffer-age means auto-detect using GLX_EXT_buffer_age, supported by some drivers.
# Useless with --glx-use-copysubbuffermesa.
# Partially breaks --resize-damage.
# Defaults to undefined.
#glx-swap-method = "1";

#################################
#
# Shadows
#
#################################
# change shadow to false if not using picom or compton-tryone-git
# for some reason makes xorg consume 100% of my CPU randomly
shadow = false;
# Avoid drawing shadow on all shaped windows (see also: --detect-rounded-corners) deprecated
#shadow-ignore-shaped = true;
# Detect rounded corners and treat them as rectangular when --shadow-ignore-shaped is on.
detect-rounded-corners = true;
# The blur radius for shadows. (default 12)
shadow-radius = 4;
# The left offset for shadows. (default -15)
shadow-offset-x = 5;
# The top offset for shadows. (default -15)
shadow-offset-y = 5;
# The translucency for shadows. (default .75)
shadow-opacity = 0.5;

# Set if you want different colour shadows
# shadow-red = 0.0;
# shadow-green = 0.0;
# shadow-blue = 0.0;

xinerama-shadow-crop = true;

# The shadow exclude options are helpful if you have shadows enabled. Due to the way compton draws its shadows, certain applications will have visual glitches
# (most applications are fine, only apps that do weird things with xshapes or argb are affected).
# This list includes all the affected apps I found in my testing. The "! name~=''" part excludes shadows on any "Unknown" windows, this prevents a visual glitch with the XFWM alt tab switcher.
shadow-exclude = [
	"! name~=''",
    "window_type *= 'normal' && ! name ~= ''",
    "_GTK_FRAME_EXTENTS@:c",
    "_NET_WM_STATE@:32a *= '_NET_WM_STATE_HIDDEN'",
	"class_g ?= 'Polybar'",
    "window_type = 'dock'",
];

#################################
#
# Opacity
#
#################################
# Opacity of inactive windows. (0.1 - 1.0, defaults to 1.0)
inactive-opacity = 1;

# Default opacity for active windows. (0.0 - 1.0, defaults to 1.0)
active-opacity = 1;

# Opacity of window titlebars and borders. (0.1 - 1.0, disabled by default)
frame-opacity = 1;

# Let inactive opacity set by -i override the '_NET_WM_OPACITY' values of windows.
inactive-opacity-override = false;

# Dim inactive windows. (0.0 - 1.0)
#inactive-dim = 0.0;
# Do not let dimness adjust based on window opacity.
# inactive-dim-fixed = true;

detect-client-opacity = false;
# Detect _NET_WM_OPACITY on client windows, useful for window managers not passing _NET_WM_OPACITY of client windows to frame windows.
# This prevents opacity being ignored for some apps.
# For example without this enabled my xfce4-notifyd is 100% opacity no matter what.

# ** Rule actually been overwritten by flashfocus
opacity-rule = [
    #"0:_NET_WM_STATE@:32a *= '_NET_WM_STATE_HIDDEN'",
    #"30:class_g = 'URxvt'",
    #"85:class_g = 'dolphin'",
    "90:class_g = 'Sublime_text'",
    "95:class_g = 'code-oss'",
    "95:class_g = 'Atom'",
    "85:class_g = 'Pcmanfm'",
    "80:class_g = 'Nitrogen'",
    "80:class_g = 'UXTerm'",
    "80:class_g = 'XTerm'",
    "100:class_g = 'VirtualBox Machine'",
    #"100:class_g = 'mpv'",
    #"100:class_g = 'gl'",
];

#################################
#
# Blur
#
#################################
# Comment blur-method to completely disable blur
# Comment both lines (and uncomment the 3 urxvt above ^^) if picom or compton-tryone-git not installed
#blur-method = "dual_kawase";
# default 3
blur-strength = 1;
blur-background = false;
#blur-kern = "5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1";
# Blur background of opaque windows with transparent frames as well.
blur-background-frame = false;
# Do not let blur radius adjust based on window opacity.
blur-background-fixed = true;
#blur-kern = "3x3box";
blur-background-exclude = [
    #"class_g = 'URxvt'",
    #"name = '^URxvt$'",
    #"name = 'urxvt'",
    "class_g ?= 'Notify-osd'",
	"class_g ?= 'albert'",
    "class_g ?= 'MEGAsync'",
    "class_g ?= 'discord'",
    "class_g ?= 'lightcord'",
    "class_g ?= 'firefox'",
    "class_g ?= 'Google-chrome'",
    "class_g ?= 'Brave-browser'",
    "class_g ?= 'Chromium'",
    #"class_g ?= 'Pcmanfm'",
    "class_g ?= 'Microsoft Teams - Insiders'",
    "class_g ?= 'Spotify'",
    "class_g ?= 'Atom'",
    "class_g ?= 'code-oss'",
    "class_g ?= 'qutebrowser'",
    "class_g ?= 'install4j-burp-StartBurp'",
    "class_g ?= 'Steam'",
    "class_g ?= 'Musixmatch'",
    "class_g ?= 'Pavucontrol'",
    "class_g ?= 'mpv'",
    "class_g ?= 'vlc'",
    "class_g ?= 'realvnc-vncserverui-service'",
    "class_g ?= 'Wps'",
    "class_g ?= 'Wireshark'",
    "class_g ?= 'Viewnior'",
    "class_g ?= 'TelegramDesktop'",
    "class_g ?= 'discord-overlay'",
    "class_g ?= 'Shotcut'",
    #"class_g ?= 'qBittorrent'",
    "class_g ?= 'net-mc-main-Main'",
    "class_g ?= 'Minecraft*'",
    "class_g ?= 'Xonotic'",
    "class_g ?= 'xonotic-sdl'",
    "class_g ?= 'ViberPC'",
    "class_g ?= 'viber'",
    "name = 'Picture in picture'",
    # both 'Polybar' and 'dock' for polybar
	"class_g ?= 'Polybar'",
    "window_type = 'dock'",
    "window_type = 'tooltip'",
    # changes: menu, dropdown_meun and popup_menu uncommented
	"window_type = 'menu'",
    "window_type = 'popup_menu'",
    "window_type = 'dropdown_menu'",
    "window_type = 'fullscreen'",
    "window_type = 'desktop'",
	"_GTK_FRAME_EXTENTS@:c",
];

#################################
#
# Fading
#
#################################
# this + flashfocus-git = perfect
# Fade windows during opacity changes.
fading = true;
# How long does it take to fade one step (in ms)?
# The time between steps in a fade in milliseconds. (default 10).
fade-delta = 5;
# Opacity change between steps while fading in. (default 0.028).
fade-in-step = 0.02;
# Opacity change between steps while fading out. (default 0.03).
fade-out-step = 0.05;
# Fade windows in/out when opening/closing
no-fading-openclose = false;
fade-exclude = [ ];

#################################
#
# Rounded Corners
#
#################################
# how rounded are the corners/borders (default: 4)
#corner-radius = 0;
rounded-corners-exclude = [
    "class_g ?= 'Xonotic'",
    "class_g ?= 'xonotic-sdl'",
    "class_g ?= 'polybar'",
    "class_g ?= 'Polybar'",
    "name = 'Polybar tray window'",
    "n:w:*tray*",
    "n:e:Notification",
    "class_g ?= 'tray'",
    #"_NET_WM_STATE@:32a *= '_NET_WM_STATE_HIDDEN'",
    #"class_g ?= 'i3-frame'"
];
#round-borders = 1;
#round-borders-exclude = [
#  "class_g = 'TelegramDesktop'",
#];

#################################
#
# Vsync
#
#################################
vsync = false;
#vsync = "opengl-mswc";

# Specify refresh rate of the screen.
# If not specified or 0, compton will try detecting this with X RandR extension.
#refresh-rate = 60;

#xrender-sync-fence = true;
# Enable DBE painting mode, intended to use with VSync to (hopefully) eliminate tearing.
# Reported to have no effect, though.
dbe = false;

#################################
#
# Animations (jonaburg/picom)
#https://github.com/jonaburg/picom
#################################
# default 150
transition-length = 200
transition-pow-x = 0.1
transition-pow-y = 0.1
transition-pow-w = 0.1
transition-pow-h = 0.1
size-transition = true

#################################
#
# Other Settings
#
#################################
# Use EWMH _NET_WM_ACTIVE_WINDOW to determine which window is focused instead of using FocusIn/Out events.
# Usually more reliable but depends on a EWMH-compliant WM.
#use-ewmh-active-win = true;
# Try to detect WM windows and mark them as active.
#mark-wmwin-focused = true;
# Mark all non-WM but override-redirect windows active (e.g. menus).
#mark-ovredir-focused = true;

#use-damage = true;

invert-color-include = [ ];
# Specify a list of conditions of windows that should always be considered focused.
focus-exclude = [
    "class_g *?= 'Virtualbox'",
    "_NET_WM_STATE@:32a *= '_NET_WM_STATE_HIDDEN'",
    #"class_g = 'mpv'",
    #"class_g = 'dolphin'",
    #"class_g = 'Nitrogen'"
];

#detect-transient = true;
# WM_TRANSIENT_FOR has higher priority if --detect-transient is enabled, too.
#detect-client-leader = true;

# deprecated
# Limit compton to repaint at most once every 1 / refresh_rate second to boost performance.
# This should not be used with --vsync drm/opengl/opengl-oml as they essentially does --sw-opti's job already,
# unless you wish to specify a lower refresh rate than the actual value.
#sw-opti = true;

# Unredirect all windows if a full-screen opaque window is detected, to maximize performance for full-screen windows, like games.
# Known to cause flickering when redirecting/unredirecting windows.
# disable picom/compton when theres a fullscreen window, like games. Takes a bit longer and lags while loading the game but should bring a better performance while playing.
unredir-if-possible = false;

# in ms
unredir-if-possible-delay = 0;

unredir-if-possible-exclude = [

];
#################################
#
# Window Type Settings
#
#################################

# To enable transparency + blur on chrome menus, change to opacity = 0.8 (tooltip and menu) and uncomment these lines in the blur exclude
#"window_type = 'menu'",
#"window_type = 'dropdown_menu'",
#"window_type = 'popup_menu'",


wintypes:
{
    # default: shadow = false; opacity = 0.8
    tooltip =       { full-shadow = false; fade = true; opacity = 1; focus = true; };
    # default: shadow = false; opacity = 0.8
    menu =          { full-shadow = false; opacity = 1 };
    # default: shadow = false
    dock =          { };
    # default: shadow = false
    dropdown_menu = { full-shadow = false; };
    # default: shadow = false
    popup_menu =    { full-shadow = false; };
    # default: shadow = false; opacity = 1
    fullscreen =    { full-shadow = false; fade = true; focus = true; };
    toolbar =       { full-shadow = false;  };
    utility =       { full-shadow = false;  };
    splash =        { full-shadow = false;  };
    dialog =        { full-shadow = false;  };
    normal =        { full-shadow = false;  };
    notify =        { full-shadow = false;  };
    combo =         { full-shadow = false;  };
    dnd =           { full-shadow = false;  };
    unknown =       { full-shadow = false;  };
};

# Window type settings
# 
# 'WINDOW_TYPE' is one of the 15 window types defined in EWMH standard: 
#     "unknown", "desktop", "dock", "toolbar", "menu", "utility", 
#     "splash", "dialog", "normal", "dropdown_menu", "popup_menu", 
#     "tooltip", "notification", "combo", and "dnd".
# 
# Following per window-type options are available: ::
# 
#   fade, shadow:::
#     Controls window-type-specific shadow and fade settings.
# 
#   opacity:::
#     Controls default opacity of the window type.
# 
#   focus:::
#     Controls whether the window of this type is to be always considered focused. 
#     (By default, all window types except "normal" and "dialog" has this on.)
# 
#   full-shadow:::
#     Controls whether shadow is drawn under the parts of the window that you 
#     normally won't be able to see. Useful when the window has parts of it 
#     transparent, and you want shadows in those areas.
# 
#   redir-ignore:::
#     Controls whether this type of windows should cause screen to become 
#     redirected again after been unredirected. If you have unredir-if-possible
#     set, and doesn't want certain window to cause unnecessary screen redirection, 
#     you can set this to `true`.
#





